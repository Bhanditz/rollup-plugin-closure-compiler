import { Storage } from 'storage';var b=b||{};b.scope={};b.ASSUME_ES5=!1;b.ASSUME_NO_NATIVE_MAP=!1;b.ASSUME_NO_NATIVE_SET=!1;b.objectCreate=b.ASSUME_ES5||"function"==typeof Object.create?Object.create:function(a){function c(){}c.prototype=a;return new c};b.underscoreProtoCanBeSet=function(){var a={a:!0},c={};try{return c.__proto__=a,c.a}catch(d){}return!1};
b.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:b.underscoreProtoCanBeSet()?function(a,c){a.__proto__=c;if(a.__proto__!==c)throw new TypeError(a+" is not extensible");return a}:null;
b.inherits=function(a,c){a.prototype=b.objectCreate(c.prototype);a.prototype.constructor=a;if(b.setPrototypeOf)(0,b.setPrototypeOf)(a,c);else for(var d in c)if("prototype"!=d)if(Object.defineProperties){var f=Object.getOwnPropertyDescriptor(c,d);f&&Object.defineProperty(a,d,f)}else a[d]=c[d];a.superClass_=c.prototype};export function Plugin(a){return Storage.call(this,a)||this}export var PLUGIN=new Plugin("foo");b.inherits(Plugin,Storage);export default Storage;
